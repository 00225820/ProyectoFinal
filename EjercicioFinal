#include <iostream>
#include <string>
#include <string.h>

const int longCad = 20;

using namespace std;

struct costoPorArticulo
{
    char nombreArticul[longCad + 1];
    int cantidad;
    float precio;
    float costoPorArticulo;
};


void datos (costoPorArticulo Total[], int cant_articulos)
{
    string art;
    for (int i = 0; i < cant_articulos; i++)
    {
        cout << "NOMBRE DEL PRODUCTO: " << endl;
        getline(cin, art, '\n');
        strncpy(Total[i].nombreArticul, art.c_str( ), longCad);
        Total[i].nombreArticul[longCad]='\0';
        cout << "CANTIDAD A LLEVAR DEL PRODUCTO " << art << ":" << endl;
        cin >> Total[i].cantidad;
        cout << "COSTO DEL PRODUCTO:" << endl;
        cin >> Total[i].precio;
        cin.ignore(100, '\n'); 
    }
    
}
float costo(costoPorArticulo Total[], int cant_articulos)
{
   for (int i = 0; i < cant_articulos; i++)
   {
       Total[i].costoPorArticulo = Total[i].precio * Total[i].cantidad;
    }
  
}
void mostrar(costoPorArticulo Total[], int cant_articulos)
{
    cout << "Productos diferentes totales diferentes que lleva: " << cant_articulos << endl;
    for (int i = 0; i < cant_articulos; i++)
    {
        cout << "Usted lleva en la carreta: " << Total[i].cantidad <<" Unidades de "<<  Total[i].nombreArticul << endl ;
        cout << "costo total del articulo: $" << Total[i].costoPorArticulo<< endl;
    }
    
}
float total(costoPorArticulo Total[], int cant_articulos)
{
    float total;
    total = 0;
    for (int i = 0; i < cant_articulos; i++)
    {
      total = Total[i].costoPorArticulo + total;
    }
     
    return total;
}

int main ()
{
    int cant_articulos; 
    cout << "TIENDA LA DIVINA PROVIDENCIA" << endl;
    cout << "Por favor digite cuantos distintos articulos lleva: " << endl;
    cin >> cant_articulos;
    cin.ignore(100, '\n');   
    costoPorArticulo Total[cant_articulos];
    datos(Total, cant_articulos);
    costo(Total, cant_articulos);
    mostrar(Total, cant_articulos);
    cout << "TOTAL A PAGAR: $" << total(Total, cant_articulos) << endl;
    return 0;
}
